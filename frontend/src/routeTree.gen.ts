/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RootRouteImport } from './routes/_root/route'
import { Route as IndexImport } from './routes/index'
import { Route as RootSettingsImport } from './routes/_root/settings'
import { Route as RootProfileImport } from './routes/_root/profile'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthSigninImport } from './routes/_auth/signin'

// Create/Update Routes

const RootRouteRoute = RootRouteImport.update({
  id: '/_root',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RootSettingsRoute = RootSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => RootRouteRoute,
} as any)

const RootProfileRoute = RootProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => RootRouteRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/_auth/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_root': {
      id: '/_root'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof RootRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/_root/profile': {
      id: '/_root/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof RootProfileImport
      parentRoute: typeof RootRouteImport
    }
    '/_root/settings': {
      id: '/_root/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof RootSettingsImport
      parentRoute: typeof RootRouteImport
    }
  }
}

// Create and export the route tree

interface RootRouteRouteChildren {
  RootProfileRoute: typeof RootProfileRoute
  RootSettingsRoute: typeof RootSettingsRoute
}

const RootRouteRouteChildren: RootRouteRouteChildren = {
  RootProfileRoute: RootProfileRoute,
  RootSettingsRoute: RootSettingsRoute,
}

const RootRouteRouteWithChildren = RootRouteRoute._addFileChildren(
  RootRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof RootRouteRouteWithChildren
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/profile': typeof RootProfileRoute
  '/settings': typeof RootSettingsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof RootRouteRouteWithChildren
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/profile': typeof RootProfileRoute
  '/settings': typeof RootSettingsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_root': typeof RootRouteRouteWithChildren
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_root/profile': typeof RootProfileRoute
  '/_root/settings': typeof RootSettingsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/signin' | '/signup' | '/profile' | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/signin' | '/signup' | '/profile' | '/settings'
  id:
    | '__root__'
    | '/'
    | '/_root'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/_root/profile'
    | '/_root/settings'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RootRouteRoute: typeof RootRouteRouteWithChildren
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RootRouteRoute: RootRouteRouteWithChildren,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_root",
        "/_auth/signin",
        "/_auth/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_root": {
      "filePath": "_root/route.tsx",
      "children": [
        "/_root/profile",
        "/_root/settings"
      ]
    },
    "/_auth/signin": {
      "filePath": "_auth/signin.tsx"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx"
    },
    "/_root/profile": {
      "filePath": "_root/profile.tsx",
      "parent": "/_root"
    },
    "/_root/settings": {
      "filePath": "_root/settings.tsx",
      "parent": "/_root"
    }
  }
}
ROUTE_MANIFEST_END */
